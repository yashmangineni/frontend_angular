import{i as f,l as m}from"./chunk-KIEPZ5TW.js";import{Ga as c,La as l,Wa as p,Xa as a,Ya as t,jb as n,kb as r,ua as i}from"./chunk-DXOJW474.js";function h(o,s){if(o&1&&(a(0,"div")(1,"details")(2,"summary"),n(3),t(),a(4,"p"),n(5),t()()()),o&2){let e=s.$implicit;i(3),r(e.q),i(2),r(e.a)}}var d=class o{qaData=[{q:"What is JavaScript?",a:"JavaScript is a lightweight, interpreted programming language used mainly for web development to make web pages interactive."},{q:"What are variables in JavaScript?",a:'Variables are containers to store data. Declared using var, let, or const. Example: let name = "John";'},{q:"Difference between var, let, and const?",a:"var is function-scoped, let and const are block-scoped. const cannot be reassigned."},{q:"What are data types in JavaScript?",a:"Primitive: string, number, boolean, null, undefined, symbol, bigint. Non-primitive: objects, arrays, functions."},{q:"What are functions?",a:"Functions are reusable blocks of code that perform a task. Example: function sum(a, b){ return a+b; }"},{q:"What are operators in JavaScript?",a:"Operators are symbols to perform operations: arithmetic (+,-,*,/), comparison (==,===), logical (&&,||), assignment (=,+=)."},{q:"What is the difference between == and ===?",a:"== checks equality with type coercion, === checks equality without type coercion (strict equality)."},{q:"What are if, else if, else statements?",a:"Used to execute code based on conditions. Example: if(condition){...} else {...}"},{q:"What is the switch statement?",a:"Switch allows executing code based on multiple possible values of a variable."},{q:"What are loops in JavaScript?",a:"Loops allow repeating code: for, while, do-while. Example: for(let i=0;i<5;i++){ console.log(i); }"},{q:"Difference between for and for...in?",a:"for loops iterate over indices; for...in iterates over keys of objects."},{q:"Difference between for...of and for...in?",a:"for...of iterates over values of iterable objects; for...in iterates over property names (keys)."},{q:"What are arrow functions?",a:"Shorter syntax for functions: const sum = (a,b) => a+b;"},{q:"What are anonymous functions?",a:"Functions without a name, often used as arguments: setTimeout(function(){...},1000);"},{q:"What are IIFE (Immediately Invoked Function Expressions)?",a:'Functions that run as soon as they are defined: (function(){ console.log("Hi"); })();'},{q:"What are closures?",a:"A closure is a function that remembers variables from its outer scope even after the outer function has executed."},{q:"What is the difference between function declaration and function expression?",a:"Declaration: function sum(){} (hoisted). Expression: const sum = function(){} (not hoisted)."},{q:"What are JavaScript objects?",a:'Objects store key-value pairs. Example: const obj = {name:"John", age:30};'},{q:"What are arrays?",a:"Arrays store ordered lists. Example: const arr = [1,2,3];"},{q:"Difference between shallow copy and deep copy?",a:"Shallow copy duplicates top-level only; deep copy duplicates all levels of an object."},{q:"How to iterate over objects?",a:"Using for...in loop or Object.keys(), Object.values(), Object.entries()."},{q:"How to destructure arrays and objects?",a:"Array: const [a,b] = [1,2]; Object: const {name,age} = obj;"},{q:"What are callbacks?",a:"Functions passed as arguments to be executed later: setTimeout(()=>{...},1000);"},{q:"What are promises?",a:"Promises represent future completion/failure of async tasks with states: pending, fulfilled, rejected."},{q:"What is async/await?",a:"Syntactic sugar over promises for cleaner async code. Example: const result = await fetchData();"},{q:"What is the event loop?",a:"Event loop handles async tasks, executing callbacks from the queue when call stack is empty."},{q:"What is the difference between microtasks and macrotasks?",a:"Microtasks (like promises) run before the next event loop tick. Macrotasks (like setTimeout) run in the next tick."}];static \u0275fac=function(e){return new(e||o)};static \u0275cmp=c({type:o,selectors:[["app-js"]],decls:8,vars:1,consts:[[1,"qa-container"],[1,"subtitle"],[4,"ngFor","ngForOf"]],template:function(e,u){e&1&&(a(0,"div",0)(1,"h2"),n(2,"JS Interview Q&A"),t(),a(3,"h3",1),n(4,"Freshers\u2019 Easy Guide \u2014 Crack Interviews from Basics \u279D Advanced"),t(),l(5,h,6,2,"div",2),t(),a(6,"p"),n(7,"js works!"),t()),e&2&&(i(5),p("ngForOf",u.qaData))},dependencies:[m,f],styles:['.qa-container[_ngcontent-%COMP%]{max-width:600px;margin:auto;background:#fff;border-radius:12px;box-shadow:0 4px 12px #0000001a;padding:20px;font-family:Arial,sans-serif}.qa-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;color:#1a73e8}details[_ngcontent-%COMP%]{border:1px solid #ddd;border-radius:8px;padding:12px 16px;margin-bottom:12px;background:#fafafa;transition:all .3s ease-in-out}details[_ngcontent-%COMP%]:hover{background:#f0f6ff;border-color:#1a73e8}summary[_ngcontent-%COMP%]{font-weight:600;cursor:pointer;position:relative}summary[_ngcontent-%COMP%]:after{content:"+";position:absolute;right:0;font-size:18px;transition:transform .3s ease}details[open][_ngcontent-%COMP%]   summary[_ngcontent-%COMP%]:after{content:"-";transform:rotate(180deg)}details[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-top:10px;color:#333;line-height:1.5}.subtitle[_ngcontent-%COMP%]{text-align:center;font-size:1rem;font-weight:500;color:#555;margin-bottom:20px}']})};export{d as Js};
